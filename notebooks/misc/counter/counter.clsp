; MOD: the puzzle itself
; MAX_COUNT: maximum count
; TERMINAL_PUZZLE: an inner puzzle run when the count reach maximum
; AMOUNT: coin amount (odd for singleton)
; COUNT: current count

(mod (MOD MAX_COUNT TERMINAL_PUZZLE AMOUNT COUNT)
    (include condition_codes.clib)
    (include utils.clib)

    (defun create-next-counter (MOD MAX_COUNT TERMINAL_PUZZLE AMOUNT COUNT)
        (list
            (list CREATE_COIN 
                (sha256tree
                        (curry
                            MOD
                            (list
                                MOD MAX_COUNT TERMINAL_PUZZLE AMOUNT
                                (+ COUNT 1) ; increase count by one
                            )
                        )
                )
                AMOUNT
            )
        )
    )

    (if (= MAX_COUNT COUNT)
        (a TERMINAL_PUZZLE ()) ; Terminated
        (create-next-counter MOD MAX_COUNT TERMINAL_PUZZLE AMOUNT COUNT)
    )
)    