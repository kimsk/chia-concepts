(mod (MOD PLAYER_ONE_HASH PLAYER_TWO_HASH CURRIED_TIC_TAC_TOE_PUZZLE odd_amount position)
    (include condition_codes.clib)
    (include tic-tac-toe.clib)
    (include utils.clib)

    (defun create-conditions (puzzle_hash odd_amount)
        (list
            (list ASSERT_MY_AMOUNT odd_amount)
            (list CREATE_COIN puzzle_hash odd_amount)
        )
    )

    (defun main (MOD PLAYER_ONE_HASH PLAYER_TWO_HASH tic_tac_toe_puzzle (play_result next_board) odd_amount next_player)
        (if (not (= 0 play_result))
            (c
                (list CREATE_COIN PLAYER_ONE_HASH -113)
                (if (= -1 play_result)
                    (list
                        (list CREATE_COIN PLAYER_ONE_HASH 20)
                        (list CREATE_COIN PLAYER_TWO_HASH 20)
                    )
                    (list
                        (if (= 1 play_result)
                            (list CREATE_COIN PLAYER_ONE_HASH (- odd_amount 1))
                            (list CREATE_COIN PLAYER_TWO_HASH (- odd_amount 1))
                        )
                    )
                )
            )
            (create-conditions
                ; puzzle_hash
                (sha256tree
                    (curry
                        MOD
                        (list
                            MOD
                            PLAYER_ONE_HASH
                            PLAYER_TWO_HASH
                            (curry
                                tic_tac_toe_puzzle 
                                (list 
                                    next_board
                                    next_player
                                )
                            )
                        )
                    )
                )
                odd_amount
            )
        )
    )

    (main
        MOD
        PLAYER_ONE_HASH
        PLAYER_TWO_HASH
        (get-uncurried-tic-tac-toe-puzzle CURRIED_TIC_TAC_TOE_PUZZLE) ; uncurry to get original tic_tac_toe_puzzle
        (a CURRIED_TIC_TAC_TOE_PUZZLE (list position)) ; get board result
        odd_amount
        (get-next-player-from-curried-tic-tac-toe-puzzle CURRIED_TIC_TAC_TOE_PUZZLE) ; get next player
    )
)
